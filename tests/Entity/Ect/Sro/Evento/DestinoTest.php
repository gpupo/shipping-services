<?php

/*
 * This file is autogenerated at 08/05/2016 4:02pm by gpupo/common-sdk
 * @see <http://www.g1mr.com/common-sdk/>
 */

namespace Entity\Ect\Sro\Evento;

use Gpupo\CommonSdk\Entity\EntityInterface;
use Gpupo\Tests\CommonSdk\Traits\EntityTrait;
use ;
use Gpupo\ShippingServices\Entity\Ect\Sro\Evento\Destino;

/**
 * @coversDefaultClass \Gpupo\ShippingServices\Entity\Ect\Sro\Evento\Destino
 *
 * @method string getLocal()    Acesso a local
 * @method setLocal(string $local)    Define local
 * @method string getCodigo()    Acesso a codigo
 * @method setCodigo(string $codigo)    Define codigo
 * @method string getCidade()    Acesso a cidade
 * @method setCidade(string $cidade)    Define cidade
 * @method string getBairro()    Acesso a bairro
 * @method setBairro(string $bairro)    Define bairro
 * @method string getUf()    Acesso a uf
 * @method setUf(string $uf)    Define uf
 *
 */
class DestinoTest extends TestCaseAbstract
{

    /**
     * @return \Gpupo\ShippingServices\Entity\Ect\Sro\Evento\Destino
     */
    public function dataProviderDestino()
    {
        return [[new Destino()]];
    }
        
    /**
     * @testdox ``getSchema()``
     * @cover ::getSchema
     * @dataProvider dataProviderDestino
     * @test
     */
    public function getSchema(Destino $destino)
    {
        $this->markIncomplete('getSchema() need implementation!');
    }
    
    
    /**
     * @testdox Possui método ``getLocal()`` para acessar Local
     * @dataProvider dataProviderDestino
     * @cover ::get
     * @cover ::getSchema
     * @small
     * @test
     */
    public function getLocal(Destino $destino, $expected = null)
    {
        $this->assertSchemaGetter('local', 'string', $destino, $expected);
    }

    /**
     * @testdox Possui método ``setLocal()`` que define Local
     * @dataProvider dataProviderDestino
     * @cover ::set
     * @cover ::getSchema
     * @small
     * @test
     */
    public function setLocal(Destino $destino, $expected = null)
    {
        $this->assertSchemaSetter('local', 'string', $destino);
    }
    
    /**
     * @testdox Possui método ``getCodigo()`` para acessar Codigo
     * @dataProvider dataProviderDestino
     * @cover ::get
     * @cover ::getSchema
     * @small
     * @test
     */
    public function getCodigo(Destino $destino, $expected = null)
    {
        $this->assertSchemaGetter('codigo', 'string', $destino, $expected);
    }

    /**
     * @testdox Possui método ``setCodigo()`` que define Codigo
     * @dataProvider dataProviderDestino
     * @cover ::set
     * @cover ::getSchema
     * @small
     * @test
     */
    public function setCodigo(Destino $destino, $expected = null)
    {
        $this->assertSchemaSetter('codigo', 'string', $destino);
    }
    
    /**
     * @testdox Possui método ``getCidade()`` para acessar Cidade
     * @dataProvider dataProviderDestino
     * @cover ::get
     * @cover ::getSchema
     * @small
     * @test
     */
    public function getCidade(Destino $destino, $expected = null)
    {
        $this->assertSchemaGetter('cidade', 'string', $destino, $expected);
    }

    /**
     * @testdox Possui método ``setCidade()`` que define Cidade
     * @dataProvider dataProviderDestino
     * @cover ::set
     * @cover ::getSchema
     * @small
     * @test
     */
    public function setCidade(Destino $destino, $expected = null)
    {
        $this->assertSchemaSetter('cidade', 'string', $destino);
    }
    
    /**
     * @testdox Possui método ``getBairro()`` para acessar Bairro
     * @dataProvider dataProviderDestino
     * @cover ::get
     * @cover ::getSchema
     * @small
     * @test
     */
    public function getBairro(Destino $destino, $expected = null)
    {
        $this->assertSchemaGetter('bairro', 'string', $destino, $expected);
    }

    /**
     * @testdox Possui método ``setBairro()`` que define Bairro
     * @dataProvider dataProviderDestino
     * @cover ::set
     * @cover ::getSchema
     * @small
     * @test
     */
    public function setBairro(Destino $destino, $expected = null)
    {
        $this->assertSchemaSetter('bairro', 'string', $destino);
    }
    
    /**
     * @testdox Possui método ``getUf()`` para acessar Uf
     * @dataProvider dataProviderDestino
     * @cover ::get
     * @cover ::getSchema
     * @small
     * @test
     */
    public function getUf(Destino $destino, $expected = null)
    {
        $this->assertSchemaGetter('uf', 'string', $destino, $expected);
    }

    /**
     * @testdox Possui método ``setUf()`` que define Uf
     * @dataProvider dataProviderDestino
     * @cover ::set
     * @cover ::getSchema
     * @small
     * @test
     */
    public function setUf(Destino $destino, $expected = null)
    {
        $this->assertSchemaSetter('uf', 'string', $destino);
    }
}
